{"version":3,"sources":["images/icon-facebook.svg","images/icon-instagram.svg","images/icon-twitter.svg","images/icon-youtube.svg","images/icon-down.svg","images/icon-up.svg","style/global.js","components/Dashboard.js","components/DashboardHeader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","darkTheme","lightTheme","DashboardGrid","styled","div","InlineIcon","space","css","theme","iconName","fb","insta","tw","yt","Ticker","changeDirection","up","down","Item","StatsItem","DashboardCard","brandColor","DashboardCardSmall","PlatformCard","info","console","log","platform","handle","className","followers","changes","OverviewCard","stats","measurement","enagement","enagementChanges","Dashboard","data","socialMedia","map","dailyOverview","Header","ThemeToggle","span","ThemeSwitch","label","DashboardHeader","setTheme","totalFollowersNumber","type","onChange","event","target","checked","statusData","socialMediaData","Body","App","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6fbcce9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-facebook.a7383764.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-instagram.991487fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-twitter.810ccee8.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-youtube.8499da12.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-down.69a5c77f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-up.95f916a5.svg\";","export const colors = {\n    primaryLimeGreen: 'hsl(163, 72%, 41%)',\n    primaryBrightRed: 'hsl(356, 69%, 56%)',\n    facebook: 'hsl(208, 92%, 53%)',\n    twitter: 'hsl(203, 89%, 53%)',\n    instagramGradientOne: 'hsl(37, 97%, 70%)',\n    instagramGradientTwo: 'hsl(329, 70%, 58%)',\n    youtube: 'hsl(348, 97%, 39%)',\n};\n\nexport const darkTheme = {\n    veryDarkBlueBg: 'hsl(230, 17%, 14%)',\n    veryDarkBlueTopBg: 'hsl(232, 19%, 15%)',\n    darkBlue: 'hsl(228, 28%, 20%)',\n    blue: 'hsl(228, 41%, 34%)',\n    blueText: 'hsl(228, 34%, 66%)',\n    white: 'hsl(0, 0%, 100%)',\n    toggleGradientOne:'hsl(210, 78%, 56%)',\n    toggleGradientTwo: 'hsl(146, 68%, 55%)'\n}\n\nexport const lightTheme = {\n    whiteBg: 'hsl(0, 0%, 100%)',\n    paleBlue: 'hsl(225, 100%, 98%)',\n    lightGrayishBlueCard: 'hsl(227, 47%, 96%)',\n    cardHover: '#e1e3f0',\n    darkGrayishBlueText: 'hsl(228, 12%, 44%)',\n    darkBlueText: 'hsl(230, 17%, 14%)',\n    toggle: 'hsl(230, 22%, 74%)'\n}\n\nexport const breakpoints = {\n    mobile: '375px',\n    desktop: '1440px',\n}","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { colors, darkTheme, lightTheme } from '../style/global.js';\nimport fb from '../images/icon-facebook.svg';\nimport insta from '../images/icon-instagram.svg';\nimport tw from '../images/icon-twitter.svg';\nimport yt from '../images/icon-youtube.svg';\nimport down from '../images/icon-down.svg';\nimport up from '../images/icon-up.svg';\n\nconst DashboardGrid = styled.div`\n    box-sizing: border-box;\n    position: absolute;\n    width: calc( (1 - (162 / 1440)*2) * 100%);\n    top: 136px;\n    left: calc((162 / 1440) * 100%);\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: 24px;\n    .overview-title{\n        grid-column: 1/5;\n        grid-row: 2/3;\n        text-transform: capitalize;\n    }\n`;\n\nconst InlineIcon = styled.div`\n    font-size: 0.9em;\n    font-weight: 700;\n    &::before{\n        width: 20px;\n        height: 20px;\n        vertical-align: middle;\n    }\n    ${({ space }) => space && css`\n        &::before{\n            padding-right: 10px;\n        }    \n    `};\n    ${({ theme }) => theme === 'dark' && css`\n        color: ${darkTheme.blueText}\n    `};\n    ${({ iconName }) => iconName === 'facebook' && css`\n        &::before{\n            content:url(${fb});\n        }\n    `};\n    ${({ iconName }) => iconName === 'instagram' && css`\n        &::before{\n            content:url(${insta});\n        }\n    `};\n    ${({ iconName }) => iconName === 'twitter' && css`\n        &::before{\n            content:url(${tw});\n        }\n    `};\n    ${({ iconName }) => iconName === 'youtube' && css`\n        &::before{\n            content:url(${yt});\n        }\n    `};\n`;\n\nconst Ticker = styled.div`\n    font-weight: 700;\n    text-transform: capitalize;\n    &::before{\n        padding-right: 5px;\n        vertical-align: super;\n    }\n\n    ${({ changeDirection }) =>  changeDirection === 'up' && css`\n        color: ${colors.primaryLimeGreen};\n        &::before{\n            content: url(${ up });\n        }\n        `\n    }\n    ${({ changeDirection }) =>  changeDirection === 'down' && css`\n        color: ${colors.primaryBrightRed};\n        &::before{\n            content: url(${ down});\n        }    \n        `\n    }\n`;\n\nconst Item = styled.div`\n    min-height: 230px; \n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    border-radius: 0 0 10px 10px;\n    align-items: center;\n    cursor: pointer;     \n    transition: background-color 400ms ease;\n    .follower-label{\n        text-transform: uppercase;\n        letter-spacing: 0.4em;\n        margin-top: -30px;\n    }\n\n    ${({ theme }) => theme === 'dark' && css`\n        background-color: ${darkTheme.darkBlue};\n        &:hover{\n            background-color: ${darkTheme.blue};\n        }\n        .follower-label{\n            color: ${darkTheme.blueText};\n        }\n    `};\n    \n    ${({ theme }) => theme === 'light' && css`\n        background-color: ${lightTheme.lightGrayishBlueCard};\n        &:hover{\n            background-color: ${lightTheme.cardHover};\n        }\n        .follower-label{\n            color: ${lightTheme.darkGrayishBlueText};\n        }\n    `};\n`;\n\nconst StatsItem = styled(Item)`\n    min-height: 126px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    border-radius: 8px;\n    align-content: space-evenly;\n    align-items: space-evenly;\n    text-transform: capitalize;\n    font-weight: 700;\n\n    div{\n        box-sizing: border-box;\n        flex: 0 50%;\n        padding-left: 25px;\n    }\n    .platform, .stats-changes{\n        text-align: right;\n        padding-right: 25px;\n    }\n    .stats{\n        font-size: 2em;\n    }\n\n    ${({ theme }) => theme === 'dark' && css`\n        background-color: ${darkTheme.darkBlue};\n        .title{\n            color: ${ darkTheme.blueText };\n        }\n    `}\n    ${({ theme }) => theme === 'light' && css`\n        color: ${ lightTheme.darkBlueText };\n        .title{\n            color: ${ lightTheme.darkGrayishBlueText };\n        }\n    `}\n`;  \n\nconst DashboardCard = styled.div`\n    min-height: 220px;\n    border-radius: 10px;\n    border-top: 6px solid ${ colors.facebook };\n\n    .follower-stats{\n        font-size: 4em;\n        font-weight: 700;\n    }\n\n    ${({ brandColor }) => brandColor === 'facebook' && css`\n        border-top: 6px solid ${ colors.facebook };\n    `};\n    ${({ brandColor }) => brandColor === 'instagram' && css`\n        border-top: 6px solid; \n        border-image-slice: 1;\n        border-width: 5px;\n        border-radius: inherit;\n        border-image-source: linear-gradient(45deg, ${colors.instagramGradientOne}, ${colors.instagramGradientTwo});\n    `};\n    ${({ brandColor }) => brandColor === 'twitter' && css`\n        border-top: 6px solid ${ colors.twitter };\n    `};\n    ${({ brandColor }) => brandColor === 'youtube' && css`\n        border-top: 6px solid ${ colors.youtube };\n    `};\n\n\n    ${({ theme }) => theme === 'dark' && css`\n        background-color: ${ darkTheme.darkBlue };\n        .follower-stats{\n            color: ${ darkTheme.white };\n        }\n    `}\n\n    ${({ theme }) => theme === 'light' && css`\n        background-color: ${ lightTheme.lightGrayishBlueCard };\n    `}\n`;\n\nconst DashboardCardSmall = styled(DashboardCard)`\n    border-top: none;\n    min-height: 116px;\n`;\n\nfunction PlatformCard({theme, info}){\n    console.log(\"card\", info);\n    return(\n        <DashboardCard brandColor={`${info.platform}`}>\n            <Item theme={theme}>\n                <InlineIcon space={true} theme={theme} iconName={`${info.platform}`}>{info.handle}</InlineIcon>\n                <div className=\"follower-stats\">{info.followers}</div>\n                {(info.platform !== 'youtube' ? <div className=\"follower-label\">followers</div> : <div className=\"follower-label\">subscribers</div> )}\n                <Ticker changeDirection={info.changeDirection} className=\"stats-changes\">{info.changes}</Ticker>\n            </Item>\n        </DashboardCard>\n    );\n}\n\nfunction OverviewCard({theme, stats}){\n    console.log(\"stats\", stats);\n\n    return(\n        <DashboardCardSmall>\n            <StatsItem theme={theme}>\n                <div className=\"title\">{stats.measurement}</div>\n                <InlineIcon iconName={`${stats.platform}`} className=\"platform\"></InlineIcon>\n                <div className=\"stats\">{stats.enagement}</div>\n                <Ticker changeDirection={stats.changeDirection} className=\"stats-changes\">{stats.enagementChanges}</Ticker>\n            </StatsItem>\n        </DashboardCardSmall>\n    );\n}\nfunction Dashboard({theme, data}) {\n    return(\n      <DashboardGrid>\n        {   data.socialMedia.map((platform) => \n                <PlatformCard theme={theme} className=\"item\" info={platform}></PlatformCard>\n            )}\n\n        <h3 className=\"overview-title\">\n            overview - today\n        </h3>\n        {data.dailyOverview.map((stats) => \n                <OverviewCard theme={theme} className=\"stats-item\" stats={stats}></OverviewCard>\n            )\n        }\n        \n      </DashboardGrid>\n    );\n} \n\nexport default Dashboard;","import React, { useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport Dashboard from './Dashboard';\nimport { colors, darkTheme, lightTheme } from '../style/global.js';\n\nconst Header = styled.div`\n    box-sizing: border-box;\n\n    min-height: 245px;\n    display: flex;\n    position: relative;\n    padding: 40px calc((162 / 1440) * 100%) 0;\n    justify-content: space-between;\n    align-items: top;\n    text-transform: capitalize;\n    transition: background-color 600ms ease-in-out;\n\n    h2{\n        margin-top: 0;\n        margin-bottom: 12px;\n    }\n    .followers-number, .theme-toggle-wrapper{\n        font-weight: 700;\n    }\n\n    ${({ theme }) => theme === 'dark' && css`\n        background-color: ${darkTheme.veryDarkBlueTopBg};\n        .followers-number{\n            color: ${darkTheme.blueText};\n        }\n    `}\n\n    ${({ theme }) => theme === 'light' && css`\n    background-color: ${lightTheme.paleBlue};\n    .followers-number{\n        color: ${lightTheme.darkBlueText};\n    }\n`}\n\n`;\n\nconst ThemeToggle = styled.span`\n    cursor: pointer;\n    margin: 0 12px;\n    &::before, &::after{\n        content: '';\n        transition: all 900ms ease;\n        display: block;\n        background: white;\n        margin: 0 3px;\n    }\n\n    &::before{\n        height: 24px;\n        width: 50px;\n        border-radius: 1em;\n        opacity: 0.8;\n        background: linear-gradient(45deg, ${darkTheme.toggleGradientOne}, ${darkTheme.toggleGradientTwo});\n    }\n\n    &::after{\n       position: absolute;\n       transform: translate(calc(47px - 100%), -120%);\n\n       height: 18px;\n       width: 18px; \n       border-radius: 50%;\n       ${({ theme }) => theme === 'dark' && css`\n       background: ${darkTheme.darkBlue};\n       `}\n\n       ${({ theme }) => theme === 'light' && css`\n       background: ${lightTheme.whiteBg};\n       `}\n\n    }\n`;\n\nconst ThemeSwitch = styled.label`\n    display: flex;\n    align-items: center;\n\n    [type=checkbox]{\n        position: absolute;\n        pointer-events: none;\n        opacity: 0;\n    }\n    [type=checkbox]:checked+${ThemeToggle}::after{\n        transform: translate(22%, -120%);\n    }\n`;\n\nfunction DashboardHeader({theme, setTheme, data}){\n\n    const themeToggleHandler = event => {\n        console.log(\"toggled\", event.target.checked)\n        const theme = event.target.checked ? 'dark' : 'light';\n        setTheme(theme);\n    };\n\n    return(\n    <Header theme={theme}>\n        <div>\n            <h2>social media dashboard</h2>\n            <p className=\"followers-number\">total followers: {data.totalFollowersNumber}</p>\n        </div>\n        <div className=\"theme-toggle-wrapper\">\n            <ThemeSwitch theme={theme}>\n                Dark Mode\n                <input type=\"checkbox\" onChange={themeToggleHandler}/>\n                <ThemeToggle theme={theme}></ThemeToggle>\n            </ThemeSwitch>\n        </div>\n\n    </Header>\n    );\n}\n\nexport default DashboardHeader;","import React, { useState } from 'react';\nimport socialMediaData from './data/socialMediaData.json';\nimport Dashboard from './components/Dashboard';\nimport DashboardHeader from './components/DashboardHeader';\n\nimport styled, { css } from 'styled-components';\nimport { darkTheme, lightTheme } from './style/global.js';\n\n// const socialMediaData = {\"hi\":\"ho\"};\nconst statusData = socialMediaData;\nconst Body = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-item: center;\n  font-size: 14px;\n  font-family: \"Inter\", sans-serif;\n  transition: background 0.6s ease;\n\n  ${({ theme }) => theme === 'dark' && css`\n    color: ${darkTheme.white};\n    background-color: ${darkTheme.veryDarkBlueBg};\n    .dashboard-header{\n      background-color: ${darkTheme.white};\n    }  \n  `}\n\n  ${({ theme }) => theme === 'light' && css`\n    color: ${lightTheme.darkBlueText};\n    background-color: ${lightTheme.whiteBg};\n  `}\n\n`;\n\nfunction App() {\n  const [theme, setTheme] = useState('dark');\n  return (\n      <Body theme={theme}>\n        <DashboardHeader theme={theme} setTheme={setTheme} data={statusData}></DashboardHeader>\n        <Dashboard theme={theme} data={statusData}></Dashboard>\n      </Body>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}